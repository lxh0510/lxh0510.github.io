<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo博客搭建</title>
      <link href="/2023/03/08/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/03/08/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>Hello! My blog!</p><p>本博客采用 hexo + github 的方式建立，采用了butterfly主题进行美化</p><p>本文记录博客搭建的具体流程，美化部分请看姊妹篇——butterfly主题配置</p><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>大三面临保研季，在总结简历的时候突然发现博客是一个很好的分享、记录和展示自己的方式</p><p>同时参考了许多大神的博客主页，渐渐的打开了这个全新的世界</p><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js:"></a>安装node.js:</h3><p>​官网下载：<a href="https://nodejs.org/en/">Node.js</a></p><h3 id="git"><a href="#git" class="headerlink" title="git:"></a>git:</h3><p>​官网下载：<a href="https://git-scm.com/">Git</a></p><p>   配置git个人信息及配置Github ssh在之前已经完成</p><p>打开cmd分别执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br><span class="line">$ git --version</span><br></pre></td></tr></table></figure><p>得到如下信息则说明安装成功：</p><p><img src="/2023/03/08/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/1.png"></p><h3 id="hexo："><a href="#hexo：" class="headerlink" title="hexo："></a>hexo：</h3><h4 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h4><p>打开Git bash,输入以下命令以安装Hexo：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure><p>[folder]代表的是你的hexo文件夹名，如果不写，就默认在当前文件夹初始化。</p><p>例 <code>$ hexo init hexotext</code></p><h4 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h4><p>需要执行generate命令生成静态文件，才能部署到服务器</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h4 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h4><p>由于还没有配置Github，所以我们先部署到本地服务器</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>此时便可在浏览器上访问<code>http://localhost:4000/</code> </p><h3 id="Github配置："><a href="#Github配置：" class="headerlink" title="Github配置："></a>Github配置：</h3><p>1.注册Github账号：</p><p>创建后网址如下：<a href="https://github.com/lxh0510">lxh0510-Github</a></p><p>2.创建github仓库：</p><p><strong>！注意：</strong>仓库名格式必须为：username.github.io</p><p>如下图所示：</p><p><img src="/2023/03/08/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2.png"></p><p>3.建立与hexo的关联：</p><p>打开<code>hexotest/_config.yml</code>文件，修改基础参数:</p><p>修改<code>#url</code>:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">url: http://lxh0510.github.io </span><br></pre></td></tr></table></figure><p>修改<code>#deploy</code>:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:lxh0510/lxh0510.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>4.部署：</p><p>在Git Bash输入以下命令部署到Github Page：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>然后在浏览器输入username.github.io就可以看到博客啦，如：<a href="https://lxh0510.github.io/">lxh0510.github.io</a></p><p>之后进行文章的更新或主题的改变只需三步：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean        <span class="comment">#清空缓存</span></span><br><span class="line">$ hexo g<span class="comment">#生成静态文件</span></span><br><span class="line">$ hexo d<span class="comment">#部署</span></span><br></pre></td></tr></table></figure><p><strong>此时博客便搭建完成啦！</strong></p><h3 id="hexo使用："><a href="#hexo使用：" class="headerlink" title="hexo使用："></a>hexo使用：</h3><p>以下介绍其他常用的 Hexo 操作命令，需要在博客文件夹下打开 Git Bash 使用</p><h4 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo n <span class="string">&quot;文章名&quot;</span></span><br></pre></td></tr></table></figure><p>文章名不需要后缀，会自动生成Markdown文件，并存放在<code>hexotext\source\_posts</code>文件夹中</p><p>文章中，需要设定一些参数与设置;</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>title</code></td><td>标题，最好用<strong>引号</strong>括起来</td></tr><tr><td><code>date</code></td><td>建立日期</td></tr><tr><td><code>update</code></td><td>更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td></tr><tr><td><code>categories</code></td><td>分类</td></tr><tr><td><code>tags</code></td><td>标签</td></tr><tr><td><code>excerpt</code></td><td>摘要</td></tr><tr><td><code>index-img</code></td><td>文章封面图</td></tr><tr><td><code>sticky</code></td><td>文章置顶，数值越大越靠前</td></tr><tr><td><code>math</code></td><td>公式转换</td></tr></tbody></table><h4 id="布局管理"><a href="#布局管理" class="headerlink" title="布局管理"></a>布局管理</h4><p>在上面新建文章时，我们还可以制定布局：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo n [layout] <span class="string">&quot;文章名&quot;</span></span><br></pre></td></tr></table></figure><p>其中，<code>layout</code> 可替换为 post（文章，默认）、draft（草稿）、page（页面）。默认值可以在配置文件中修改 <code>default_layout</code> 来改动。不同布局的文件会存储在不同位置</p><h4 id="修改默认布局"><a href="#修改默认布局" class="headerlink" title="修改默认布局"></a>修改默认布局</h4><p>我们可以通过修改<code>hexotext\scaffolds</code>中的<code>post.md</code>文件，自定义默认布局。这样，每当创建新文章，该布局便会出现在文章最上方，我们只需根据该布局修改若干参数即可，省时又省力！</p><p>如下为我暂时使用的布局（会随时更新）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line"><span class="built_in">date</span>: &#123;&#123; <span class="built_in">date</span> &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">cover: /img/blog/</span><br><span class="line">top_img: /img/article.jpg</span><br></pre></td></tr></table></figure><p><strong>注意！</strong>：cover封面图与普通图片大小好像不太适配，要用画图软件将宽度缩小为80%</p><h4 id="分类与标签"><a href="#分类与标签" class="headerlink" title="分类与标签"></a>分类与标签</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line"> - 技术</span><br><span class="line"> - 博客  # 「博客」会作为「技术」的子类</span><br><span class="line">tags:</span><br><span class="line"> - Hexo</span><br><span class="line"> - Git  # 「Hexo」与「Git」是同级标签</span><br></pre></td></tr></table></figure><h2 id="一些小问题（持续更新）"><a href="#一些小问题（持续更新）" class="headerlink" title="一些小问题（持续更新）"></a>一些小问题（持续更新）</h2><h3 id="有关照片加载："><a href="#有关照片加载：" class="headerlink" title="有关照片加载："></a>有关照片加载：</h3><p>在写此篇文章的过程中，出现图片在网页中无法显示，只有路径名称的现象。</p><p>后参考csdn博客：<a href="https://blog.csdn.net/m0_43401436/article/details/107191688?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167826368416800197036006%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=167826368416800197036006&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-107191688-null-null.142%5Ev73%5Ewechat_v2,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&utm_term=hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%BC%95%E5%85%A5%E5%9B%BE%E7%89%87&spm=1018.2226.3001.4187">hexo博客中插入图片失败——解决思路及个人最终解决办法</a></p><p>经过一下几步解决：</p><h4 id="创建图片资源文件夹"><a href="#创建图片资源文件夹" class="headerlink" title="创建图片资源文件夹"></a>创建图片资源文件夹</h4><p>将<code>hexotest/_config.yml</code>文件，修改<code>post_asset_folder</code>参数</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>该操作的作用就是在使用<code>hexo new xxx</code>指令新建博文时，在相同路径下同步创建一个<code>xxx</code>文件夹，而<code>xxx</code>文件夹的作用就是用来存放图片资源</p><h4 id="修改Typora图像设置"><a href="#修改Typora图像设置" class="headerlink" title="修改Typora图像设置"></a>修改Typora图像设置</h4><p><img src="/2023/03/08/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/3.png"></p><p>这么设置的结果就是：想写篇博客，在<code>source\_posts</code>文件夹下新建<code>xxx.md</code>文件，写着写着需要插一张图，从别处复制，然后在typora中直接粘贴，图片资源文件夹自动搞定，并不用关心什么文件夹，只管专注于<code>md</code>文件即可</p><h4 id="插件下载"><a href="#插件下载" class="headerlink" title="插件下载"></a>插件下载</h4><p>通过如下命令下载插件<code>hexo-asset-image</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><h4 id="修改md图片路径"><a href="#修改md图片路径" class="headerlink" title="修改md图片路径"></a>修改md图片路径</h4><p>很神奇！我们在写md文件时，引用图片文件时，需以如下格式：<code>![](xxx.png)</code>,即删除前面的<code>xxx/</code>，但这样的图片在Typora中是无法显示的</p><p>原因和插件编译的过程有关，详细分析见上述csdn博客</p><p><strong>至此问题就解决啦！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
          <category> MyBlog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>butterfly主题配置</title>
      <link href="/2023/03/07/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/03/07/butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>Hello! My blog!</p><p>本博客采用 hexo + github 的方式建立，采用了butterfly主题进行美化</p><p>本文记录博客的美化部分，搭建过程请看姊妹篇——hexo博客搭建</p><p>本文主要参考了：</p><p>csdn博客:<a href="https://blog.csdn.net/YR_112233/article/details/122778691?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167836278916800227426622%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=167836278916800227426622&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-122778691-null-null.142%5Ev73%5Ewechat_v2,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&utm_term=butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE&spm=1018.2226.3001.4187">hexo个人博客搭建（二）butterfly主题配置</a></p><p>butterfly官方文档:<a href="https://butterfly.js.org/">butterfly</a></p><h2 id="安装butterfly"><a href="#安装butterfly" class="headerlink" title="安装butterfly"></a>安装butterfly</h2><p>1.在git bash中clone butterfly主题：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>如果沒有 <code>pug </code>以及 <code>stylus</code> 的渲染器，还需要下载，否则在项目运行时会报错：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>3.修改<code>hexotest/_config.yml</code>文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><p>4.升级建议:</p><p>为了減少升级主题带来的不便，我们还需要做以下操作：<br>把<code>hexotest/theme/butterfly/ _config.yml</code> 复制到 <code>hexotest</code>目录下，同重命名为<code> _config.butterfly.yml</code></p><p><code>Hexo</code>会自动合并主题中的<code>_config.yml</code>和 <code>_config.butterfly.yml</code>里的配置，如果存在同名配置，会使用<code>_config.butterfly.yml</code>的配置，其优先度较高。</p><h2 id="配置butterfly"><a href="#配置butterfly" class="headerlink" title="配置butterfly"></a>配置butterfly</h2><h3 id="设置网站个人配置"><a href="#设置网站个人配置" class="headerlink" title="设置网站个人配置"></a>设置网站个人配置</h3><p>修改<code>hexotest/_config.yml</code>文件，自己发挥吧！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: lxh0510<span class="comment">#网站标题（选个酷的！）</span></span><br><span class="line">subtitle: <span class="string">&#x27;&#x27;</span><span class="comment">#副标题</span></span><br><span class="line">description: <span class="string">&#x27;&#x27;</span><span class="comment">#个性签名</span></span><br><span class="line">keywords:</span><br><span class="line">author: Xinhao Liu<span class="comment">#作者</span></span><br><span class="line">language: zh-CN<span class="comment">#语言（简体中文）</span></span><br><span class="line">timezone: Asia/Shanghai<span class="comment">#中国时区</span></span><br></pre></td></tr></table></figure><h3 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h3><p>修改<code>hexotest/_config.butterfly.yml</code>文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  主页: / || fas fa-home</span><br><span class="line">  分类: /categories/ || fa fa-archive</span><br><span class="line">  标签: /tags/ || fa fa-tags</span><br><span class="line">  归档: /archives/ || fa fa-folder-open</span><br><span class="line">  关于笔者: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure><p>每个导航页也可以有副导航页，以及各种各样的导航栏类型，详情请见官方文档，为了简洁好看，我的导航栏暂时设置为这样</p><p>效果图：</p><p>![屏幕截图 2023-03-09 203358](屏幕截图 2023-03-09 203358.png)</p><h3 id="代码块显示设置"><a href="#代码块显示设置" class="headerlink" title="代码块显示设置"></a>代码块显示设置</h3><p>先修改<code>hexotest/_config.butterfly.yml</code>文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Code Blocks (代码块样式)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line">highlight_theme: mac <span class="comment">#  darker / pale night / light / ocean / mac / mac light / false</span></span><br><span class="line">highlight_copy: <span class="literal">true</span> <span class="comment"># copy button 是否显示复制按钮</span></span><br><span class="line">highlight_lang: <span class="literal">true</span> <span class="comment"># show the code language 展示代码块语言</span></span><br><span class="line">highlight_shrink: <span class="literal">false</span> <span class="comment"># true: 打开文章默认折叠代码块内容 / false: 打开文章默认展开代码块内容</span></span><br><span class="line">highlight_height_limit: <span class="literal">false</span> <span class="comment"># unit: px</span></span><br><span class="line">code_word_wrap: <span class="literal">true</span> <span class="comment">#是否关闭滚动条</span></span><br></pre></td></tr></table></figure><p>再修改<code>hexotest/_config.yml</code>文件:将line_number的值改为false</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: false </span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace: &#x27;&#x27;</span><br></pre></td></tr></table></figure><p>效果图：</p><p>![屏幕截图 2023-03-09 224138](屏幕截图 2023-03-09 224138.png)</p><h3 id="本地搜索功能"><a href="#本地搜索功能" class="headerlink" title="本地搜索功能"></a>本地搜索功能</h3><p>1、安装插件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>2、主题配置文件 <code>_config.butterfly.yml</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search <span class="keyword">for</span> Posts</span><br><span class="line">    hits_empty: <span class="string">&quot;We didn&#x27;t find any results for the search: <span class="variable">$&#123;query&#125;</span>&quot;</span> <span class="comment"># 如果没有查到内容相关内容显示</span></span><br></pre></td></tr></table></figure><p>效果图：</p><p>![屏幕截图 2023-03-09 224605](屏幕截图 2023-03-09 224605.png)</p><h3 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h3><p>分类：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>会出现<code>hexotest/source/categories/index.md</code>文件</p><p>标签：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>会出现<code>hexotest/source/categories/index.md</code>文件</p><p>…以此类推创建自己要的子页面，如about（关于笔者）….等</p>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
          <category> MyBlog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
